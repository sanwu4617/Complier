Terminals unused in grammar

   BOOL
   LSQUBR
   RSQUBR
   PLUS
   BREAK
   CASE
   CONST
   CONTINUE
   DEFAULT
   DELETE
   DO
   ENUM
   FALSE
   NEW
   NULLPTR
   STRUCT
   SWITCH
   TRUE
   UNION


状态 136 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: statements

    2 block: LBRACE statements RBRACE

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | declaration SEMICOLON
    7          | assign_stmt
    8          | expr SEMICOLON
    9          | if_stmt
   10          | for_stmt
   11          | while_stmt
   12          | return_stmt
   13          | printf_stmt
   14          | scanf_stmt
   15          | block
   16          | main_func

   17 idlist: idlist COMMA IDENTIFIER
   18       | IDENTIFIER

   19 declaration: T IDENTIFIER ASSIGN expr
   20            | T idlist

   21 T: T_INT
   22  | T_CHAR
   23  | T_BOOL

   24 expr: IDENTIFIER
   25     | INTEGER
   26     | CHAR
   27     | STRING
   28     | expr ADD expr
   29     | expr SUB expr
   30     | expr MUL expr
   31     | expr DIV expr
   32     | expr REM expr
   33     | expr EQ expr
   34     | expr NE expr
   35     | expr LE expr
   36     | expr GE expr
   37     | expr LT expr
   38     | expr GT expr
   39     | expr AND expr
   40     | expr OR expr
   41     | expr COMMA expr
   42     | NOT expr
   43     | SUB expr
   44     | ADD expr
   45     | expr ADDADD
   46     | expr SUBSUB
   47     | GETADD expr

   48 left_val: IDENTIFIER

   49 assign_stmt: left_val ASSIGN expr SEMICOLON
   50            | left_val ADDASS expr SEMICOLON
   51            | left_val SUBASS expr SEMICOLON
   52            | left_val MULASS expr SEMICOLON
   53            | left_val DIVASS expr SEMICOLON
   54            | left_val REMASS expr SEMICOLON
   55            | left_val ANDASS expr SEMICOLON
   56            | left_val ORASS expr SEMICOLON
   57            | left_val ASSIGN assign_stmt

   58 if_stmt: IF LPAREN expr RPAREN statement
   59        | IF LPAREN expr RPAREN statement ELSE statement

   60 for_stmt: FOR LPAREN statement statement expr RPAREN statement

   61 while_stmt: WHILE LPAREN expr RPAREN statement

   62 return_stmt: RETURN SEMICOLON
   63            | RETURN expr SEMICOLON

   64 printf_stmt: PRINTF LPAREN STRING RPAREN SEMICOLON
   65            | PRINTF LPAREN STRING COMMA expr RPAREN SEMICOLON

   66 scanf_stmt: SCANF LPAREN STRING RPAREN SEMICOLON
   67           | SCANF LPAREN STRING COMMA expr RPAREN SEMICOLON

   68 main_func: T_INT MAIN LPAREN RPAREN block
   69          | VOID MAIN LPAREN RPAREN block


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 22
T_BOOL (259) 23
T_INT (260) 21 68
IDENTIFIER (261) 17 18 19 24 48
INTEGER (262) 25
CHAR (263) 26
BOOL (264)
STRING (265) 27 64 65 66 67
IF (266) 58 59
ELSE (267) 59
LPAREN (268) 58 59 60 61 64 65 66 67 68 69
RPAREN (269) 58 59 60 61 64 65 66 67 68 69
LBRACE (270) 2
RBRACE (271) 2
LSQUBR (272)
RSQUBR (273)
SEMICOLON (274) 5 6 8 49 50 51 52 53 54 55 56 62 63 64 65 66 67
COMMA (275) 17 41 65 67
EQ (276) 33
NE (277) 34
GE (278) 36
LE (279) 35
GT (280) 38
LT (281) 37
ASSIGN (282) 19 49 57
PLUS (283)
SUB (284) 29 43
MUL (285) 30
DIV (286) 31
REM (287) 32
ADDADD (288) 45
SUBSUB (289) 46
ADDASS (290) 50
SUBASS (291) 51
MULASS (292) 52
DIVASS (293) 53
REMASS (294) 54
ANDASS (295) 55
ORASS (296) 56
WHILE (297) 61
FOR (298) 60
RETURN (299) 62 63
BREAK (300)
CASE (301)
CONST (302)
CONTINUE (303)
DEFAULT (304)
DELETE (305)
DO (306)
ENUM (307)
FALSE (308)
NEW (309)
NULLPTR (310)
STRUCT (311)
SWITCH (312)
TRUE (313)
UNION (314)
VOID (315) 69
PRINTF (316) 64 65
SCANF (317) 66 67
MAIN (318) 68 69
OR (319) 40
AND (320) 39
ADD (321) 28 44
NOT (322) 42
GETADD (323) 47


Nonterminals, with rules where they appear

$accept (69)
    左： 0
program (70)
    左： 1, 右： 0
block (71)
    左： 2, 右： 15 68 69
statements (72)
    左： 3 4, 右： 1 2 4
statement (73)
    左： 5 6 7 8 9 10 11 12 13 14 15 16, 右： 3 4 58 59 60 61
idlist (74)
    左： 17 18, 右： 17 20
declaration (75)
    左： 19 20, 右： 6
T (76)
    左： 21 22 23, 右： 19 20
expr (77)
    左： 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47, 右： 8 19 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47 49 50 51 52 53 54 55 56 58 59 60 61 63
    65 67
left_val (78)
    左： 48, 右： 49 50 51 52 53 54 55 56 57
assign_stmt (79)
    左： 49 50 51 52 53 54 55 56 57, 右： 7 57
if_stmt (80)
    左： 58 59, 右： 9
for_stmt (81)
    左： 60, 右： 10
while_stmt (82)
    左： 61, 右： 11
return_stmt (83)
    左： 62 63, 右： 12
printf_stmt (84)
    左： 64 65, 右： 13
scanf_stmt (85)
    左： 66 67, 右： 14
main_func (86)
    左： 68 69, 右： 16


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    program      转到状态 21
    block        转到状态 22
    statements   转到状态 23
    statement    转到状态 24
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 1

   22 T: T_CHAR .

    $default  reduce using rule 22 (T)


State 2

   23 T: T_BOOL .

    $default  reduce using rule 23 (T)


State 3

   21 T: T_INT .
   68 main_func: T_INT . MAIN LPAREN RPAREN block

    MAIN  shift, and go to state 37

    $default  reduce using rule 21 (T)


State 4

   24 expr: IDENTIFIER .
   48 left_val: IDENTIFIER .

    ASSIGN    reduce using rule 48 (left_val)
    ADDASS    reduce using rule 48 (left_val)
    SUBASS    reduce using rule 48 (left_val)
    MULASS    reduce using rule 48 (left_val)
    DIVASS    reduce using rule 48 (left_val)
    REMASS    reduce using rule 48 (left_val)
    ANDASS    reduce using rule 48 (left_val)
    ORASS     reduce using rule 48 (left_val)
    $default  reduce using rule 24 (expr)


State 5

   25 expr: INTEGER .

    $default  reduce using rule 25 (expr)


State 6

   26 expr: CHAR .

    $default  reduce using rule 26 (expr)


State 7

   27 expr: STRING .

    $default  reduce using rule 27 (expr)


State 8

   58 if_stmt: IF . LPAREN expr RPAREN statement
   59        | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 38


State 9

    2 block: LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statements   转到状态 39
    statement    转到状态 24
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 10

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 11

   43 expr: SUB . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 41


State 12

   61 while_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 42


State 13

   60 for_stmt: FOR . LPAREN statement statement expr RPAREN statement

    LPAREN  shift, and go to state 43


State 14

   62 return_stmt: RETURN . SEMICOLON
   63            | RETURN . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SEMICOLON   shift, and go to state 44
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 45


State 15

   69 main_func: VOID . MAIN LPAREN RPAREN block

    MAIN  shift, and go to state 46


State 16

   64 printf_stmt: PRINTF . LPAREN STRING RPAREN SEMICOLON
   65            | PRINTF . LPAREN STRING COMMA expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 47


State 17

   66 scanf_stmt: SCANF . LPAREN STRING RPAREN SEMICOLON
   67           | SCANF . LPAREN STRING COMMA expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 48


State 18

   44 expr: ADD . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 49


State 19

   42 expr: NOT . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 50


State 20

   47 expr: GETADD . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 51


State 21

    0 $accept: program . $end

    $end  shift, and go to state 52


State 22

   15 statement: block .

    $default  reduce using rule 15 (statement)


State 23

    1 program: statements .
    4 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    $default  reduce using rule 1 (program)

    block        转到状态 22
    statement    转到状态 53
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 24

    3 statements: statement .

    $default  reduce using rule 3 (statements)


State 25

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 26

   19 declaration: T . IDENTIFIER ASSIGN expr
   20            | T . idlist

    IDENTIFIER  shift, and go to state 55

    idlist  转到状态 56


State 27

    8 statement: expr . SEMICOLON
   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SEMICOLON  shift, and go to state 57
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 28

   49 assign_stmt: left_val . ASSIGN expr SEMICOLON
   50            | left_val . ADDASS expr SEMICOLON
   51            | left_val . SUBASS expr SEMICOLON
   52            | left_val . MULASS expr SEMICOLON
   53            | left_val . DIVASS expr SEMICOLON
   54            | left_val . REMASS expr SEMICOLON
   55            | left_val . ANDASS expr SEMICOLON
   56            | left_val . ORASS expr SEMICOLON
   57            | left_val . ASSIGN assign_stmt

    ASSIGN  shift, and go to state 74
    ADDASS  shift, and go to state 75
    SUBASS  shift, and go to state 76
    MULASS  shift, and go to state 77
    DIVASS  shift, and go to state 78
    REMASS  shift, and go to state 79
    ANDASS  shift, and go to state 80
    ORASS   shift, and go to state 81


State 29

    7 statement: assign_stmt .

    $default  reduce using rule 7 (statement)


State 30

    9 statement: if_stmt .

    $default  reduce using rule 9 (statement)


State 31

   10 statement: for_stmt .

    $default  reduce using rule 10 (statement)


State 32

   11 statement: while_stmt .

    $default  reduce using rule 11 (statement)


State 33

   12 statement: return_stmt .

    $default  reduce using rule 12 (statement)


State 34

   13 statement: printf_stmt .

    $default  reduce using rule 13 (statement)


State 35

   14 statement: scanf_stmt .

    $default  reduce using rule 14 (statement)


State 36

   16 statement: main_func .

    $default  reduce using rule 16 (statement)


State 37

   68 main_func: T_INT MAIN . LPAREN RPAREN block

    LPAREN  shift, and go to state 82


State 38

   58 if_stmt: IF LPAREN . expr RPAREN statement
   59        | IF LPAREN . expr RPAREN statement ELSE statement

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 83


State 39

    2 block: LBRACE statements . RBRACE
    4 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    RBRACE      shift, and go to state 84
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 53
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 40

   24 expr: IDENTIFIER .

    $default  reduce using rule 24 (expr)


State 41

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   43     | SUB expr .
   45     | expr . ADDADD
   46     | expr . SUBSUB

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 43 (expr)


State 42

   61 while_stmt: WHILE LPAREN . expr RPAREN statement

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 85


State 43

   60 for_stmt: FOR LPAREN . statement statement expr RPAREN statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 86
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 44

   62 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 62 (return_stmt)


State 45

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   63 return_stmt: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 87
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 46

   69 main_func: VOID MAIN . LPAREN RPAREN block

    LPAREN  shift, and go to state 88


State 47

   64 printf_stmt: PRINTF LPAREN . STRING RPAREN SEMICOLON
   65            | PRINTF LPAREN . STRING COMMA expr RPAREN SEMICOLON

    STRING  shift, and go to state 89


State 48

   66 scanf_stmt: SCANF LPAREN . STRING RPAREN SEMICOLON
   67           | SCANF LPAREN . STRING COMMA expr RPAREN SEMICOLON

    STRING  shift, and go to state 90


State 49

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   44     | ADD expr .
   45     | expr . ADDADD
   46     | expr . SUBSUB

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 44 (expr)


State 50

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   42     | NOT expr .
   45     | expr . ADDADD
   46     | expr . SUBSUB

    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 42 (expr)


State 51

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   47     | GETADD expr .

    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 47 (expr)


State 52

    0 $accept: program $end .

    $default  接受


State 53

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 54

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 55

   18 idlist: IDENTIFIER .
   19 declaration: T IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 91

    $default  reduce using rule 18 (idlist)


State 56

   17 idlist: idlist . COMMA IDENTIFIER
   20 declaration: T idlist .

    COMMA  shift, and go to state 92

    $default  reduce using rule 20 (declaration)


State 57

    8 statement: expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 58

   41 expr: expr COMMA . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 93


State 59

   33 expr: expr EQ . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 94


State 60

   34 expr: expr NE . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 95


State 61

   36 expr: expr GE . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 96


State 62

   35 expr: expr LE . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 97


State 63

   38 expr: expr GT . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 98


State 64

   37 expr: expr LT . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 99


State 65

   29 expr: expr SUB . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 100


State 66

   30 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 101


State 67

   31 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 102


State 68

   32 expr: expr REM . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 103


State 69

   45 expr: expr ADDADD .

    $default  reduce using rule 45 (expr)


State 70

   46 expr: expr SUBSUB .

    $default  reduce using rule 46 (expr)


State 71

   40 expr: expr OR . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 104


State 72

   39 expr: expr AND . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 105


State 73

   28 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 106


State 74

   49 assign_stmt: left_val ASSIGN . expr SEMICOLON
   57            | left_val ASSIGN . assign_stmt

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr         转到状态 107
    left_val     转到状态 28
    assign_stmt  转到状态 108


State 75

   50 assign_stmt: left_val ADDASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 109


State 76

   51 assign_stmt: left_val SUBASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 110


State 77

   52 assign_stmt: left_val MULASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 111


State 78

   53 assign_stmt: left_val DIVASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 112


State 79

   54 assign_stmt: left_val REMASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 113


State 80

   55 assign_stmt: left_val ANDASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 114


State 81

   56 assign_stmt: left_val ORASS . expr SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 115


State 82

   68 main_func: T_INT MAIN LPAREN . RPAREN block

    RPAREN  shift, and go to state 116


State 83

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   58 if_stmt: IF LPAREN expr . RPAREN statement
   59        | IF LPAREN expr . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 117
    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73


State 84

    2 block: LBRACE statements RBRACE .

    $default  reduce using rule 2 (block)


State 85

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   61 while_stmt: WHILE LPAREN expr . RPAREN statement

    RPAREN  shift, and go to state 118
    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73


State 86

   60 for_stmt: FOR LPAREN statement . statement expr RPAREN statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 119
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 87

   63 return_stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 63 (return_stmt)


State 88

   69 main_func: VOID MAIN LPAREN . RPAREN block

    RPAREN  shift, and go to state 120


State 89

   64 printf_stmt: PRINTF LPAREN STRING . RPAREN SEMICOLON
   65            | PRINTF LPAREN STRING . COMMA expr RPAREN SEMICOLON

    RPAREN  shift, and go to state 121
    COMMA   shift, and go to state 122


State 90

   66 scanf_stmt: SCANF LPAREN STRING . RPAREN SEMICOLON
   67           | SCANF LPAREN STRING . COMMA expr RPAREN SEMICOLON

    RPAREN  shift, and go to state 123
    COMMA   shift, and go to state 124


State 91

   19 declaration: T IDENTIFIER ASSIGN . expr

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 125


State 92

   17 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 93

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   41     | expr COMMA expr .
   45     | expr . ADDADD
   46     | expr . SUBSUB

    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73

    $default  reduce using rule 41 (expr)


State 94

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   33     | expr EQ expr .
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 33 (expr)


State 95

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   34     | expr NE expr .
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 34 (expr)


State 96

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   36     | expr GE expr .
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 36 (expr)


State 97

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 35 (expr)


State 98

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   38     | expr GT expr .
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 38 (expr)


State 99

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   37     | expr LT expr .
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 37 (expr)


State 100

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   29     | expr SUB expr .
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 29 (expr)


State 101

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   30     | expr MUL expr .
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 30 (expr)


State 102

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   31     | expr DIV expr .
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 31 (expr)


State 103

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   32     | expr REM expr .
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 32 (expr)


State 104

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   40     | expr OR expr .
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    AND     shift, and go to state 72
    ADD     shift, and go to state 73

    $default  reduce using rule 40 (expr)


State 105

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   39     | expr AND expr .
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    ADD     shift, and go to state 73

    $default  reduce using rule 39 (expr)


State 106

   28 expr: expr . ADD expr
   28     | expr ADD expr .
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70

    $default  reduce using rule 28 (expr)


State 107

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   49 assign_stmt: left_val ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 127
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 108

   57 assign_stmt: left_val ASSIGN assign_stmt .

    $default  reduce using rule 57 (assign_stmt)


State 109

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   50 assign_stmt: left_val ADDASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 128
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 110

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   51 assign_stmt: left_val SUBASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 129
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 111

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   52 assign_stmt: left_val MULASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 130
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 112

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   53 assign_stmt: left_val DIVASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 131
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 113

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   54 assign_stmt: left_val REMASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 132
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 114

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   55 assign_stmt: left_val ANDASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 133
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 115

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   56 assign_stmt: left_val ORASS expr . SEMICOLON

    SEMICOLON  shift, and go to state 134
    COMMA      shift, and go to state 58
    EQ         shift, and go to state 59
    NE         shift, and go to state 60
    GE         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    LT         shift, and go to state 64
    SUB        shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    REM        shift, and go to state 68
    ADDADD     shift, and go to state 69
    SUBSUB     shift, and go to state 70
    OR         shift, and go to state 71
    AND        shift, and go to state 72
    ADD        shift, and go to state 73


State 116

   68 main_func: T_INT MAIN LPAREN RPAREN . block

    LBRACE  shift, and go to state 9

    block  转到状态 135


State 117

   58 if_stmt: IF LPAREN expr RPAREN . statement
   59        | IF LPAREN expr RPAREN . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 136
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 118

   61 while_stmt: WHILE LPAREN expr RPAREN . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 137
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 119

   60 for_stmt: FOR LPAREN statement statement . expr RPAREN statement

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 138


State 120

   69 main_func: VOID MAIN LPAREN RPAREN . block

    LBRACE  shift, and go to state 9

    block  转到状态 139


State 121

   64 printf_stmt: PRINTF LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 122

   65 printf_stmt: PRINTF LPAREN STRING COMMA . expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 141


State 123

   66 scanf_stmt: SCANF LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 124

   67 scanf_stmt: SCANF LPAREN STRING COMMA . expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    expr  转到状态 143


State 125

   19 declaration: T IDENTIFIER ASSIGN expr .
   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB

    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73

    $default  reduce using rule 19 (declaration)


State 126

   17 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 17 (idlist)


State 127

   49 assign_stmt: left_val ASSIGN expr SEMICOLON .

    $default  reduce using rule 49 (assign_stmt)


State 128

   50 assign_stmt: left_val ADDASS expr SEMICOLON .

    $default  reduce using rule 50 (assign_stmt)


State 129

   51 assign_stmt: left_val SUBASS expr SEMICOLON .

    $default  reduce using rule 51 (assign_stmt)


State 130

   52 assign_stmt: left_val MULASS expr SEMICOLON .

    $default  reduce using rule 52 (assign_stmt)


State 131

   53 assign_stmt: left_val DIVASS expr SEMICOLON .

    $default  reduce using rule 53 (assign_stmt)


State 132

   54 assign_stmt: left_val REMASS expr SEMICOLON .

    $default  reduce using rule 54 (assign_stmt)


State 133

   55 assign_stmt: left_val ANDASS expr SEMICOLON .

    $default  reduce using rule 55 (assign_stmt)


State 134

   56 assign_stmt: left_val ORASS expr SEMICOLON .

    $default  reduce using rule 56 (assign_stmt)


State 135

   68 main_func: T_INT MAIN LPAREN RPAREN block .

    $default  reduce using rule 68 (main_func)


State 136

   58 if_stmt: IF LPAREN expr RPAREN statement .
   59        | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 144

    ELSE      [reduce using rule 58 (if_stmt)]
    $default  reduce using rule 58 (if_stmt)


State 137

   61 while_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 61 (while_stmt)


State 138

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   60 for_stmt: FOR LPAREN statement statement expr . RPAREN statement

    RPAREN  shift, and go to state 145
    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73


State 139

   69 main_func: VOID MAIN LPAREN RPAREN block .

    $default  reduce using rule 69 (main_func)


State 140

   64 printf_stmt: PRINTF LPAREN STRING RPAREN SEMICOLON .

    $default  reduce using rule 64 (printf_stmt)


State 141

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   65 printf_stmt: PRINTF LPAREN STRING COMMA expr . RPAREN SEMICOLON

    RPAREN  shift, and go to state 146
    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73


State 142

   66 scanf_stmt: SCANF LPAREN STRING RPAREN SEMICOLON .

    $default  reduce using rule 66 (scanf_stmt)


State 143

   28 expr: expr . ADD expr
   29     | expr . SUB expr
   30     | expr . MUL expr
   31     | expr . DIV expr
   32     | expr . REM expr
   33     | expr . EQ expr
   34     | expr . NE expr
   35     | expr . LE expr
   36     | expr . GE expr
   37     | expr . LT expr
   38     | expr . GT expr
   39     | expr . AND expr
   40     | expr . OR expr
   41     | expr . COMMA expr
   45     | expr . ADDADD
   46     | expr . SUBSUB
   67 scanf_stmt: SCANF LPAREN STRING COMMA expr . RPAREN SEMICOLON

    RPAREN  shift, and go to state 147
    COMMA   shift, and go to state 58
    EQ      shift, and go to state 59
    NE      shift, and go to state 60
    GE      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    LT      shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    REM     shift, and go to state 68
    ADDADD  shift, and go to state 69
    SUBSUB  shift, and go to state 70
    OR      shift, and go to state 71
    AND     shift, and go to state 72
    ADD     shift, and go to state 73


State 144

   59 if_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 148
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 145

   60 for_stmt: FOR LPAREN statement statement expr RPAREN . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    VOID        shift, and go to state 15
    PRINTF      shift, and go to state 16
    SCANF       shift, and go to state 17
    ADD         shift, and go to state 18
    NOT         shift, and go to state 19
    GETADD      shift, and go to state 20

    block        转到状态 22
    statement    转到状态 149
    declaration  转到状态 25
    T            转到状态 26
    expr         转到状态 27
    left_val     转到状态 28
    assign_stmt  转到状态 29
    if_stmt      转到状态 30
    for_stmt     转到状态 31
    while_stmt   转到状态 32
    return_stmt  转到状态 33
    printf_stmt  转到状态 34
    scanf_stmt   转到状态 35
    main_func    转到状态 36


State 146

   65 printf_stmt: PRINTF LPAREN STRING COMMA expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 147

   67 scanf_stmt: SCANF LPAREN STRING COMMA expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 148

   59 if_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 59 (if_stmt)


State 149

   60 for_stmt: FOR LPAREN statement statement expr RPAREN statement .

    $default  reduce using rule 60 (for_stmt)


State 150

   65 printf_stmt: PRINTF LPAREN STRING COMMA expr RPAREN SEMICOLON .

    $default  reduce using rule 65 (printf_stmt)


State 151

   67 scanf_stmt: SCANF LPAREN STRING COMMA expr RPAREN SEMICOLON .

    $default  reduce using rule 67 (scanf_stmt)
